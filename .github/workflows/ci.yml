name: CI
on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Gradle
      run: ./gradlew build copyJniLib
    - name: Save JNI lib output
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v1
      with:
        name: jni-lib
        path: build/jni-libs/libwasmtime_jni_*
  publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Restore JNI libs
      uses: actions/download-artifact@v2
      with:
        name: jni-lib
    - name: Build universal jar
      run: ./gradlew universalJar
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
